# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: Go

on:
  push:
    tags:
      - '*'

jobs:

  build:
    runs-on: ubuntu-latest
      
    steps:
    - uses: actions/checkout@v3

    - name: Set up Go
      uses: actions/setup-go@v3

    - run: go get
    
    - name: Build 
      run: |
        GOOS=windows GOARCH=amd64 go build -o gbook-win-amd64.exe exec/gbook/main.go
        GOOS=windows GOARCH=386 go build -o gbook-win-386.exe exec/gbook/main.go
        GOOS=darwin GOARCH=amd64 go build -o gbook-mac-amd64 exec/gbook/main.go
        GOOS=linux GOARCH=amd64 go build -o gbook-linux-amd64 exec/gbook/main.go
      
    
    - name: Upload binaries to release
      uses: svenstaro/upload-release-action@v2
      with:
        repo_token: ${{ secrets.ACCESS_TOKEN }}
        file: gbook-win-amd64.exe
        asset_name: gbook-win-amd64.exe
        tag: ${{ github.ref }}
        overwrite: true
        
    
    - name: Upload binaries to release
      uses: svenstaro/upload-release-action@v2
      with:
        repo_token: ${{ secrets.ACCESS_TOKEN }}
        file: gbook-win-386.exe
        asset_name: gbook-win-386.exe
        tag: ${{ github.ref }}
        overwrite: true
        
    
    - name: Upload binaries to release
      uses: svenstaro/upload-release-action@v2
      with:
        repo_token: ${{ secrets.ACCESS_TOKEN }}
        file: gbook-mac-amd64 
        asset_name: gbook-mac-amd64 
        tag: ${{ github.ref }}
        overwrite: true
    
    - name: Upload binaries to release
      uses: svenstaro/upload-release-action@v2
      with:
        repo_token: ${{ secrets.ACCESS_TOKEN }}
        file: gbook-linux-amd64
        asset_name: gbook-linux-amd64
        tag: ${{ github.ref }}
        overwrite: true
    
